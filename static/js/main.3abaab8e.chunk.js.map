{"version":3,"sources":["Components/NavPanel.js","firebase.js","Components/Progress.js","Components/AboutPage.js","Components/Refer.js","Components/HomePage.js","Components/Login.js","Components/ReferralLanding.js","data.js","App.js","serviceWorker.js","index.js"],"names":["NavPanel","props","state","className","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","to","React","Component","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","googleProvider","auth","GoogleAuthProvider","database","prizes","Progress","getRefCount","ref","activeUser","on","snapshot","exists","setState","referralCount","val","referrals","nextPrizeAt","this","prevProps","Row","Col","Card","Title","Body","style","marginLeft","ProgressBar","striped","now","label","Math","floor","questions","q","a","faqs","map","quest","paddingBottom","backgroundColor","marginBottom","Refer","console","log","margin","width","height","marginTop","float","Header","class","marginRight","Button","variant","src","HomePage","handleLogout","isLoggedIn","signOut","setActiveUser","onClick","Login","user","handleGoogleLogin","signInWithPopup","then","result","uid","once","userAlreadyExists","Object","keys","new_user_data","displayName","set","referrer","creditReferrer","catch","error","alt","text","ReferralLanding","sampleData","name","App","resetFirebase","printUser","onAuthStateChanged","userID","allUsers","exact","path","render","AboutPage","loadUserData","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.3abaab8e.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../Styling/Navbar.css';\r\n\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from \"react-bootstrap/Nav\"\r\nimport NavDropdown from \"react-bootstrap/NavDropdown\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\n\r\nclass NavPanel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"navpanel\">\r\n                <Navbar bg=\"light\" expand=\"lg\">\r\n                    <Navbar.Brand href=\"#home\">REFeree</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <div>\r\n                            <Link to='/home'> Home </Link>\r\n                            <Link to='/about'>About Us</Link>\r\n                        </div>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavPanel;","// this code is copypasted from another thing i did\r\nimport firebase from \"firebase/app\";\r\n//these imports are what enable the function calls auth() and database()\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\"\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\r\n  authDomain: \"referee-42ffa.firebaseapp.com\",\r\n  databaseURL: \"https://referee-42ffa.firebaseio.com\",\r\n  projectId: \"referee-42ffa\",\r\n  storageBucket: \"referee-42ffa.appspot.com\",\r\n  messagingSenderId: \"527189579972\",\r\n  appId: \"1:527189579972:web:74e964b67554da94d15191\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport const auth = firebase.auth();\r\nexport const database = firebase.database();\r\nexport default firebase;","import React from 'react';\r\nimport '../Styling/Progress.css';\r\nimport Card from \"react-bootstrap/Card\";\r\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nimport { database } from \"../firebase\"\r\n\r\nconst prizes = [\r\n    '10% Discount',\r\n    '20% Discount',\r\n    '30% Discount',\r\n    '50% Discount',\r\n]\r\n\r\nclass Progress extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            referralCount: 0,\r\n            nextPrizeAt: 5,\r\n            activeUser: this.props.activeUser\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getRefCount();\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.activeUser != prevProps.activeUser) {\r\n            this.getRefCount();\r\n        }\r\n    }\r\n\r\n    getRefCount = () => {\r\n        database.ref(`userData/${this.state.activeUser}`).on(\"value\", snapshot => {\r\n            if (snapshot && snapshot.exists()) {\r\n                this.setState({ referralCount: snapshot.val().referrals });\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"progressbar\">\r\n                <Row>\r\n                    <Col>\r\n                        <Card className='Card'>\r\n                            <Card.Title className='Title'>Your Progress</Card.Title>\r\n                            <Card.Body>\r\n                                <div className='Milestones'>\r\n                                    <div>0</div>\r\n                                    <div style={{ marginLeft: '9vw' }}>5</div>\r\n                                    <div style={{ marginLeft: '9vw' }}>10</div>\r\n                                    <div style={{ marginLeft: '9vw' }}>15</div>\r\n                                    <div style={{ marginLeft: '9vw' }}>20</div>\r\n                                </div>\r\n                                <ProgressBar\r\n                                    striped now={100 * (this.state.referralCount / 20)}\r\n                                    className='ProgressBar'\r\n                                    label={this.state.referralCount}\r\n                                />\r\n                                <div className='Milestones'>\r\n                                    <div>Rewards</div>\r\n                                    <div className='Rewards'>{prizes[0]}</div>\r\n                                    <div className='Rewards'>{prizes[1]}</div>\r\n                                    <div className='Rewards'>{prizes[2]}</div>\r\n                                    <div className='Rewards'>{prizes[3]}</div>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col>\r\n                        <Card className='Message'>\r\n                            <Card.Body>You are {5 - this.state.referralCount % 5} referral(s) away from the next prize!!</Card.Body>\r\n                            <Card.Body>Next Prize: {prizes[Math.floor(this.state.referralCount / 5)]}</Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Progress;","import React from \"react\";\r\nimport \"../Styling/FAQ.css\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport NavPanel from './NavPanel';\r\n\r\nimport { Redirect } from \"react-router-dom\"\r\n\r\nconst questions = [\r\n    {\r\n        q: 'How can I refer my friends?',\r\n        a: 'Click on the refer button to invite your friends using email!'\r\n    },\r\n    {\r\n        q: 'I love this! How can I make a new account?',\r\n        a: 'If you somehow made it here without signing in please go back to our sign in screen and log in with our convenient gmail authentification'\r\n    },\r\n    {\r\n        q: 'What can I redeem with my points?',\r\n        a: 'We offer discounts and for the extremely dedicated, even a brand new Mercedes!'\r\n    },\r\n    {\r\n        q: 'This app is amazing, can I ask who made this?',\r\n        a: 'That would be team REFeree, we are group 3-1 in the software engineering track and our goal is to give our clients the best possible product we can make!'\r\n    },\r\n]\r\n\r\nexport default function () {\r\n    const faqs = questions.map(quest => {\r\n        return (\r\n            <div style={{ paddingBottom: 20 }}>\r\n                <h4>{quest.q}</h4>\r\n                <p>{quest.a}</p>\r\n            </div>\r\n        )\r\n    })\r\n\r\n    return (\r\n        <div style={{ backgroundColor: '#37496D' }}>\r\n            <NavPanel />\r\n            <div className=\"FAQ\">\r\n                <h1 style={{ marginBottom: 20 }}>FAQs</h1>\r\n                <h4 style={{ marginBottom: 40 }}>If you still have more questions please contact our team through our email</h4>\r\n                {faqs}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport '../Styling/Refer.css';\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { database, auth } from \"../firebase\";\r\n\r\nclass Refer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeUser: null\r\n        }\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.activeUser != prevProps.activeUser) {\r\n            this.setState({ activeUser: this.props.activeUser })\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ activeUser: this.props.activeUser })\r\n        console.log(this.props.activeUser)\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"ref\">\r\n                <Row>\r\n                    <Col>\r\n                        <Card style={{ margin: \"0 auto\", width: \"45vw\", height: \"25vh\", marginTop: \"3vh\", marginBottom: \"3vh\", float: \"none\", marginLeft: \"10vw\" }}>\r\n                            <Card.Header>\r\n                                Your Referral Link:\r\n                            </Card.Header>\r\n                            <Card.Body class=\"h3 text-center\" style={{ margin: \"0 auto\", marginTop: \"7vh\", marginLeft: \"3vh\", marginRight: \"3vh\", float: \"none\" }}>\r\n                                {`alex-shen1.github.io/${process.env.PUBLIC_URL}/#/ref/${this.props.activeUser}`} \r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col>\r\n                        <Card style={{ margin: \"0 auto\", width: \"16vw\", height: \"25vh\", marginTop: \"3vh\", marginBottom: \"3vh\", float: \"none\" }}>\r\n                            <Card.Header>\r\n                                Refer a friend!\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Button variant=\"light\">\r\n                                    <img src=\"https://cdn2.hubspot.net/hubfs/521324/App-Icon-1200x1200-gmail.png\" width=\"40px\" height=\"40px\" />\r\n                                </Button> {' '}\r\n                                <Button variant=\"light\">\r\n                                    <img src=\"https://pngimg.com/uploads/facebook_logos/facebook_logos_PNG19748.png\" width=\"40px\" height=\"40px\" />\r\n                                </Button> {' '}\r\n                                <Button variant=\"light\">\r\n                                    <img src=\"https://lh3.googleusercontent.com/proxy/L1Qczy6X8MHlu0EOMm6NPr88KdGmpGS6ocRV0l3lqsn96R0Wz2ec6nEViQKXW-MY_KBSBxLlrooEkwEk4_EzrIA_l0oKvAxQmPplyQR11AAFzrGsCoEFqxCDQbC_sBSjZA\" width=\"40px\" height=\"40px\" />\r\n                                </Button> {' '}\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Refer;","// import NavPanel from \"./NavPanel\";\r\nimport Progress from \"./Progress\";\r\nimport Refer from \"./Refer\";\r\nimport NavPanel from './NavPanel';\r\n\r\nimport React, { Component } from \"react\";\r\n\r\nimport { Redirect } from \"react-router-dom\"\r\n\r\nimport { auth } from \"../firebase\"\r\nexport default class HomePage extends Component {\r\n    handleLogout = () => {\r\n        console.log(\"logging out\")\r\n        this.setState({ isLoggedIn: false, activeUser: null })\r\n        auth.signOut()\r\n        this.props.setActiveUser(null)\r\n    }\r\n    render() {\r\n        return this.props.isLoggedIn ? <div className=\"homepage\">\r\n            <NavPanel />\r\n            <Refer activeUser={this.props.activeUser} />\r\n            <Progress activeUser={this.props.activeUser} />\r\n\r\n            <button onClick={this.handleLogout} >Sign out</button>\r\n        </div> : <Redirect to='/login' />\r\n    }\r\n}","import React from 'react';\r\nimport '../Styling/Login.css';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport NavBar from \"react-bootstrap/NavBar\";\r\nimport firebase from '../firebase.js';\r\n\r\nimport { Redirect } from \"react-router-dom\"\r\n\r\nimport { auth, googleProvider, database } from \"../firebase\"\r\n\r\nexport default class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    setActiveUser = (user) => {\r\n        this.setState({ activeUser: user })\r\n    }\r\n\r\n    handleGoogleLogin = () => {\r\n        auth.signInWithPopup(googleProvider).then(result => {\r\n            console.log(result)\r\n            let user = result.user;\r\n            this.props.setActiveUser(user.uid)\r\n\r\n\r\n            // check if logged user is already in list of all users; if not, initialize their data\r\n            database.ref(\"userData\").once(\"value\", snapshot => {\r\n                if (snapshot && snapshot.exists()) {\r\n                    let userAlreadyExists = false;\r\n                    Object.keys(snapshot.val()).map(id => {\r\n                        if (user.uid === id) {\r\n                            userAlreadyExists = true;\r\n                        }\r\n                    })\r\n\r\n                    if (!userAlreadyExists) {\r\n                        let new_user_data = {\r\n                            \"name\": user.displayName,\r\n                            \"referrals\": 0\r\n                        }\r\n                        database.ref(`userData/${user.uid}`).set(new_user_data)\r\n\r\n                        if (this.props.referrer != null) {\r\n                            this.creditReferrer()\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n        }).catch(error => console.log(error));\r\n    }\r\n\r\n    // accesses referrer's referrals and increments by 1\r\n    creditReferrer = () => {\r\n        const id = this.props.referrer;\r\n\r\n        const ref = database.ref(`userData/${id}`)\r\n        ref.once(\"value\", snapshot => {\r\n            if (snapshot && snapshot.exists()) {\r\n                console.log(snapshot.val())\r\n                let referrer = snapshot.val()\r\n                referrer[\"referrals\"]++;\r\n                console.log(referrer)\r\n                ref.set(referrer)\r\n            }\r\n        }).catch(error => console.log(error));\r\n    }\r\n\r\n    // accesses referrer's referrals and increments by 1\r\n    creditReferrer = () => {\r\n        const id = this.props.referrer;\r\n\r\n        const ref = database.ref(`userData/${id}`)\r\n        ref.once(\"value\", snapshot => {\r\n            if (snapshot && snapshot.exists()) {\r\n                console.log(snapshot.val())\r\n                let referrer = snapshot.val()\r\n                referrer[\"referrals\"]++;\r\n                console.log(referrer)\r\n                ref.set(referrer)\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    handleLogout = () => {\r\n        console.log(\"logging out\")\r\n        this.setState({ isLoggedIn: false, activeUser: null })\r\n        this.props.setActiveUser(null)\r\n        auth.signOut()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"login\">\r\n                {!this.props.isLoggedIn ? <div>\r\n\r\n                <NavBar>\r\n                    <NavBar.Brand>\r\n                        <img src=\"https://live.staticflickr.com/65535/49968029767_6d56a52575_o.png\" width=\"70px\" height=\"70px\" alt=\"logo\" />\r\n                    </NavBar.Brand>\r\n                    <NavBar.Brand>REFERee</NavBar.Brand>\r\n                </NavBar>\r\n                <img src=\"https://live.staticflickr.com/65535/49968078762_77ef7807c5_o.png\" width=\"1100px\" height=\"618px\" alt=\"shoes\" />\r\n\r\n                    {\r\n                        this.props.isLoggedIn\r\n                            ? <Card bg=\"secondary\" text=\"light\" style={{ margin: \"0 auto\", width: \"10vw\", height: \"5vh\", marginTop: \"3vh\", marginBottom: \"3vh\", float: \"none\" }}>Hello, \"NAME\"</Card>\r\n                            : (<Card style={{ margin: \"0 auto\", width: \"70vw\", height: \"15vh\", marginTop: \"3vh\", marginBottom: \"3vh\", float: \"none\" }}>\r\n                                <Card.Body class=\"h4 text-center\" style={{ marginTop: \"2vh\" }}>\r\n                                    stay in the loop:\r\n                                </Card.Body>\r\n                                <Button variant=\"outline-dark\" style={{ margin: \"0 auto\", marginTop: \"1vh\", marginBottom: \"1vh\", float: \"none\" }} onClick={this.handleGoogleLogin}>Sign in with Google</Button>\r\n                            </Card>)\r\n                    }\r\n                    {\r\n                        this.props.isLoggedIn\r\n\r\n                            ? <Button variant=\"outline-info\" onClick={this.handleLogout} >Sign out</Button>\r\n\r\n                            // ? <button onClick={this.handleLogout} >Sign out</button>\r\n                            : <button onClick={this.handleGoogleLogin}>Sign in with Google</button>\r\n                    }\r\n                    {/* <button onClick={this.handleLogout} >Sign out</button>\r\n                    <button onClick={this.handleGoogleLogin}>Sign in with Google</button>\r\n                    <button onClick={this.creditReferrer}>test giving points</button>\r\n                    {/* ? <Button variant=\"outline-info\" onClick={this.handleLogout} >Sign out</Button>\r\n                            : <Button variant=\"outline-info\" onClick={this.handleGoogleLogin}>Sign in with Google</Button>\r\n                    } */} \r\n                </div> : <Redirect to='/home' />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport { database } from \"../firebase\"\r\nimport Login from \"./Login\"\r\n\r\nexport default class ReferralLanding extends Component {\r\n\r\n    render() {\r\n        return <div>\r\n            {this.props.id}\r\n            <Login\r\n                isLoggedIn={this.props.isLoggedIn}\r\n                referrer={this.props.id}\r\n                setActiveUser={this.props.setActiveUser} />\r\n        </div>\r\n    }\r\n}","export const sampleData = {\r\n    \"EsmTKQcSgtVIreazD9ZY4nNEYK42\": {\r\n        name: \"Alex Shen\",\r\n        referrals: 2\r\n    },\r\n    \"kcEgNwSW3ZN10k8BwXJG0fPxylr2\": {\r\n        name: \"Alan Li\",\r\n        referrals: 3\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport NavPanel from './Components/NavPanel.js';\r\nimport Progress from './Components/Progress.js';\r\nimport AboutPage from './Components/AboutPage.js';\r\nimport HomePage from \"./Components/HomePage\"\r\nimport Login from \"./Components/Login\"\r\nimport ReferralLanding from \"./Components/ReferralLanding\"\r\nimport Refer from './Components/Refer.js';\r\nimport { HashRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\n\r\nimport { sampleData } from \"./data\"\r\n\r\nimport { auth, database } from \"./firebase\"\r\n\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeUser: null, // UID of current user\r\n      isLoggedIn: false,\r\n      allUsers: null,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    // run in case user is logged in, but page refreshed\r\n    auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        console.log(user)\r\n        // this.setState({ activeUser: user.uid, isLoggedIn: true })\r\n        this.setActiveUser(user.uid)\r\n      } else {\r\n        console.log(\"no user\")\r\n      }\r\n    });\r\n\r\n    database.ref(\"userData\").on(\"value\", snapshot => {\r\n      if (snapshot && snapshot.exists()) {\r\n        this.setState({ allUsers: Object.keys(snapshot.val()) })\r\n      }\r\n    })\r\n  }\r\n  \r\n  // debugging function; remove later\r\n  resetFirebase = () => {\r\n    Object.keys(sampleData).map(id => {\r\n      database.ref(`userData/${id}`).set(sampleData[id])\r\n    })\r\n  }\r\n\r\n  // debugging function; remove later\r\n  printUser = () => {\r\n    auth.onAuthStateChanged(function (user) {\r\n      if (user) {\r\n        // id = user.uid\r\n        // this.setState({ activeUser: user.uid })\r\n        console.log(user)\r\n      } else {\r\n        // No user is signed in.\r\n        console.log(\"no user\")\r\n      }\r\n    });\r\n  }\r\n\r\n  setActiveUser = userID => this.setState({ activeUser: userID, isLoggedIn: (userID != null) })\r\n\r\n  render() {\r\n    // console.log(process.env)\r\n    return (\r\n      <div className=\"app\">\r\n        <Router>\r\n          <Switch>\r\n            {/* default path, redirects to login */}\r\n            <Route exact path=\"/\" render={props => {\r\n              return <Redirect to='/login' />\r\n            }} />\r\n\r\n            <Route exact path=\"/home\" render={(props) =>\r\n              <HomePage {...props}\r\n                activeUser={this.state.activeUser}\r\n                isLoggedIn={this.state.isLoggedIn}\r\n                setActiveUser={this.setActiveUser}\r\n              />} />\r\n\r\n            <Route exact path=\"/about\" render={(props) =>\r\n              <AboutPage {...props}\r\n                isLoggedIn={this.state.isLoggedIn} />} />\r\n\r\n            <Route exact path=\"/login\" render={(props) =>\r\n              <Login {...props}\r\n                loadUserData={this.loadUserData}\r\n                handleGoogleLogin={this.handleGoogleLogin}\r\n                isLoggedIn={this.state.isLoggedIn}\r\n                handleLogout={this.handleLogout}\r\n                referrer={null} />} />\r\n\r\n            {/* generates landing pages for referral links */}\r\n            {this.state.allUsers ? this.state.allUsers.map(id => {\r\n              console.log(`creating page for ${id}`)\r\n              return <Route exact path={`/ref/${id}`} render={(props) =>\r\n                <ReferralLanding {...props}\r\n                  isLoggedIn={this.state.isLoggedIn}\r\n                  id={id}\r\n                  setActiveUser={this.setActiveUser} />} />\r\n            }) : \"\"}\r\n          </Switch>\r\n        </Router>\r\n\r\n        {/* <button onClick={this.handleGoogleLogin}>Log in w/ google</button> */}\r\n        <button onClick={this.loadUserData}>Print user</button>\r\n        {/* <button onClick={()=>auth.signOut()}>Sign out</button> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}