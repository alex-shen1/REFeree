{"version":3,"sources":["firebase.js","Components/NavPanel.js","Components/AboutPage.js","Components/Progress.js","Components/Refer.js","Components/HomePage.js","Components/Login.js","Components/ReferralLanding.js","data.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","googleProvider","auth","GoogleAuthProvider","database","NavPanel","props","handleLogout","setState","isLoggedIn","activeUser","signOut","setActiveUser","state","bg","expand","Brand","src","width","height","alt","href","Toggle","aria-controls","Collapse","id","to","style","paddingRight","float","Button","onClick","this","variant","React","Component","questions","q","a","backgroundColor","className","marginBottom","map","quest","paddingBottom","prizes","longerPrizes","Progress","useState","referralCount","setReferralCount","nextPrizeAt","useEffect","prevProps","ref","on","snapshot","exists","val","referrals","Row","Col","Card","Title","Body","marginLeft","ProgressBar","striped","now","label","prize","Math","floor","Carousel","indicators","Item","class","imageLinks","Refer","copyTextToClipboard","copyText","document","getElementById","select","setSelectionRange","execCommand","alert","value","console","log","margin","marginTop","Header","size","marginRight","justifyContent","link","HomePage","Login","user","handleGoogleLogin","signInWithPopup","then","result","uid","once","userAlreadyExists","Object","keys","new_user_data","displayName","set","referrer","creditReferrer","catch","error","textAlign","text","ReferralLanding","sampleData","name","App","resetFirebase","printUser","onAuthStateChanged","userID","allUsers","exact","path","render","AboutPage","loadUserData","Boolean","window","location","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.ac964a38.chunk.js","sourcesContent":["// this code is copypasted from another thing i did\nimport firebase from \"firebase/app\";\n//these imports are what enable the function calls auth() and database()\nimport \"firebase/auth\";\nimport \"firebase/database\"\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\n  authDomain: \"referee-42ffa.firebaseapp.com\",\n  databaseURL: \"https://referee-42ffa.firebaseio.com\",\n  projectId: \"referee-42ffa\",\n  storageBucket: \"referee-42ffa.appspot.com\",\n  messagingSenderId: \"527189579972\",\n  appId: \"1:527189579972:web:74e964b67554da94d15191\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\n\nexport const auth = firebase.auth();\nexport const database = firebase.database();\nexport default firebase;","import React from 'react';\nimport '../Styling/Navbar.css';\n\nimport Navbar from 'react-bootstrap/Navbar';\nimport Button from 'react-bootstrap/Button';\n\n\nimport Nav from \"react-bootstrap/Nav\"\nimport NavDropdown from \"react-bootstrap/NavDropdown\"\nimport { Link } from \"react-router-dom\"\n\nimport { auth } from \"../firebase\"\n\n\nclass NavPanel extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    }\n    handleLogout = () => {\n        this.setState({ isLoggedIn: false, activeUser: null })\n        auth.signOut()\n        this.props.setActiveUser(null)\n    }\n\n    render() {\n\n        return (\n            <div>\n                <Navbar bg=\"light\" expand=\"lg\">\n                    <Navbar.Brand>\n                        <img src=\"https://live.staticflickr.com/65535/49968029767_6d56a52575_o.png\" width=\"70px\" height=\"70px\" alt=\"logo\" />\n                    </Navbar.Brand>\n                    <Navbar.Brand href=\"#home\">REFERee</Navbar.Brand>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <div>\n                            <Link to='/home' style={{ paddingRight: 10 }}> Home</Link>\n                            <Link to='/about'>About Us</Link>\n                        </div>\n\n                    </Navbar.Collapse>\n                    <div style={{ float: 'right' }}>\n                        <Button\n                            onClick={this.handleLogout}\n                            variant=\"outline-danger\"\n                        >Sign out</Button>\n                    </div>\n                </Navbar>\n            </div >\n        )\n    }\n}\n\nexport default NavPanel;","import React from \"react\";\nimport \"../Styling/FAQ.css\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport NavPanel from './NavPanel';\n\nimport { Redirect } from \"react-router-dom\"\n\nconst questions = [\n    {\n        q: 'How can I refer my friends?',\n        a: 'All you have to do is send them your referral link! For extra convenience, you can also use our buttons to invite your friends using email.'\n    },\n    {\n        q: 'What can I redeem with my points?',\n        a: 'We offer numerous rewards: entry to an exclusive Facebook group, various merch, and for the extremely dedicated, even some shoes from our unreleased lineup!'\n    },\n    {\n        q: 'I love this! How can I make a new account?',\n        a: 'Wait... it shouldn\\'t be possible for you to be here without an account! Please go back to our sign in screen and log in with our quick-and-easy Google authentication.'\n    },\n    {\n        q: 'This app is amazing, can I ask who made this?',\n        a: 'That would be Team REFERee; we are group 3-1 in the Software Engineering track and our goal is to give our clients the best possible product we can make!'\n    },\n]\n\nexport default function () {\n    return (\n        <div style={{ backgroundColor: '#37496D' }}>\n            <NavPanel />\n\n            <div className=\"about\">\n                <h1>About our team</h1>\n                <h4> </h4\n                ></div>\n\n            <div className=\"FAQ\">\n                <h1 style={{ marginBottom: 20 }}>FAQs</h1>\n                <h4 style={{ marginBottom: 40 }}>If you still have more questions, please contact our team through email!</h4>\n\n                {questions.map(quest => {\n                    return (\n                        <div style={{ paddingBottom: 20 }}>\n                            <h4>{quest.q}</h4>\n                            <p>{quest.a}</p>\n                        </div>\n                    )\n                })}\n            </div>\n        </div>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport '../Styling/Progress.css';\nimport Card from \"react-bootstrap/Card\";\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Carousel from \"react-bootstrap/Carousel\";\n\n// import FacebookGroup from \"./Images/FacebookGroup.png\";\n// import Sticker from \"./Images/Sticker.png\";\n// import Tshirt from \"./Images/Tshirt.png\";\n// import SneakPeak from \"./Images/SneakPeak.png\";\n\nimport { database } from \"../firebase\"\n\nconst prizes = [\n    'Facebook group',\n    'Sneak co. stickers',\n    'Sneak co. T-shirt',\n    'Unreleased shoes',\n]\n\nconst longerPrizes = [\n    'being added to the exclusive Facebook Group',\n    'getting custom Sneak co. stickers in the mail',\n    'receiving a custom  Sneak co. T-shirt',\n    'receiving your own pair of not-yet-released Sneak co. sneakers'\n]\n\nexport default function Progress(props) {\n    const [referralCount, setReferralCount] = useState(0);\n    const [nextPrizeAt, setNextPrizeAt] = useState(5);\n    const [activeUser, setActiveUser] = useState(props.activeUser);\n\n    useEffect((prevProps) => {\n        //prevProps.activeUser\n        if (activeUser !== null) {\n            database.ref(`userData/${activeUser}`).on(\"value\", snapshot => {\n                if (snapshot && snapshot.exists()) {\n                    setReferralCount(snapshot.val().referrals);\n                }\n            })\n        }\n    })\n\n    return (\n        <div className=\"progressbar\">\n            <Row>\n                <Col>\n                    <Card className='PCard'>\n                        <Card.Title className='Title'>Your Progress</Card.Title>\n                        <Card.Body>\n                            <div className='Milestones'>\n                                <div>0</div>\n                                <div style={{ marginLeft: '8vw' }}>10</div>\n                                <div style={{ marginLeft: '8vw' }}>25</div>\n                                <div style={{ marginLeft: '8vw' }}>50</div>\n                                <div style={{ marginLeft: '8vw' }}>100</div>\n                            </div>\n                            <ProgressBar\n                                striped now={referralCount}\n                                className='ProgressBar'\n                                label={referralCount}\n                            />\n\n\n                            <div className='Milestones'>\n                                <div>Rewards</div>\n                                {prizes.map(prize => {\n                                    return <div style={{ marginLeft: '3vw' }} className='Rewards'>{prize}</div>\n                                })}\n                            </div>\n                        </Card.Body>\n\n                    </Card>\n                </Col>\n\n                <Col>\n                    <Card className='Message'>\n                        <Card.Body>You are {nextPrizeAt - referralCount % nextPrizeAt} referrals away from the next prize,\n                                which is {longerPrizes[Math.floor(referralCount / 5)]}!!</Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n            <Row>\n                <div className=\"carousel\">\n                    <Carousel indicators={false}>\n                        <Carousel.Item>\n                            <img class=\"d-block mx-auto\" src=\"https://live.staticflickr.com/65535/49968391176_5810f896e5_o.png\" width=\"280px\" height=\"280px\" alt=\"FaceBookGroup\" />\n                        </Carousel.Item>\n                        <Carousel.Item>\n                            <img class=\"d-block mx-auto\" src=\"https://live.staticflickr.com/65535/49968391076_1e2941b92d_o.png\" width=\"280px\" height=\"280px\" alt=\"Sticker\" />\n                        </Carousel.Item>\n                        <Carousel.Item>\n                            <img class=\"d-block mx-auto\" src=\"https://live.staticflickr.com/65535/49968658347_90e8b3770c_o.png\" width=\"280px\" height=\"280px\" alt=\"T-Shirt\" />\n                        </Carousel.Item>\n                        <Carousel.Item>\n                            <img class=\"d-block mx-auto\" src=\"https://live.staticflickr.com/65535/49968658267_051134fdbf_o.png\" width=\"280px\" height=\"280px\" alt=\"Sneaker\" />\n                        </Carousel.Item>\n                    </Carousel>\n                </div>\n            </Row>\n        </div>\n    )\n\n}\n\n// class Progress extends React.Component {\n//     constructor(props) {\n//         super(props);\n//         this.state = {\n//             referralCount: 0,\n//             nextPrizeAt: 5,\n//             activeUser: this.props.activeUser\n//         }\n//     }\n\n//     componentDidMount() {\n//         this.getRefCount();\n//     }\n//     componentDidUpdate(prevProps) {\n//         if (this.props.activeUser !== prevProps.activeUser) {\n//             this.getRefCount();\n//         }\n//     }\n\n//     getRefCount = () => {\n//         database.ref(`userData/${this.state.activeUser}`).on(\"value\", snapshot => {\n//             if (snapshot && snapshot.exists()) {\n//                 this.setState({ referralCount: snapshot.val().referrals });\n//             }\n//         })\n//     }\n\n//     render() {\n//         return (\n//             <div className=\"progressbar\">\n//                 <Row>\n//                     <Col>\n//                         <Card className='PCard'>\n//                             <Card.Title className='Title'>Your Progress</Card.Title>\n//                             <Card.Body>\n//                                 <div className='Milestones'>\n//                                     <div>0</div>\n//                                     <div style={{ marginLeft: '8vw' }}>10</div>\n//                                     <div style={{ marginLeft: '8vw' }}>25</div>\n//                                     <div style={{ marginLeft: '8vw' }}>50</div>\n//                                     <div style={{ marginLeft: '8vw' }}>100</div>\n//                                 </div>\n//                                 <ProgressBar\n//                                     striped now={this.state.referralCount}\n//                                     className='ProgressBar'\n//                                     label={this.state.referralCount}\n//                                 />\n\n\n//                                 <div className='Milestones'>\n//                                     <div>Rewards</div>\n//                                     {prizes.map(prize => {\n//                                         return <div style={{ marginLeft: '3vw' }} className='Rewards'>{prize}</div>\n//                                     })}\n//                                 </div>\n//                             </Card.Body>\n\n//                         </Card>\n//                     </Col>\n\n//                     <Col>\n//                         <Card className='Message'>\n//                             <Card.Body>You are {this.state.nextPrizeAt - this.state.referralCount % this.state.nextPrizeAt} referrals away from the next prize,\n//                                 which is {longerPrizes[Math.floor(this.state.referralCount / 5)]}!!</Card.Body>\n//                         </Card>\n//                     </Col>\n//                 </Row>\n//                 <Row>\n//                     <div className=\"carousel\">\n//                         <Carousel indicators={false}>\n//                             <Carousel.Item>\n//                                 <img class=\"d-block mx-auto\" src=\"https://live.staticflickr.com/65535/49968391176_5810f896e5_o.png\" width=\"280px\" height=\"280px\" alt=\"FaceBookGroup\" />\n//                             </Carousel.Item>\n//                             <Carousel.Item>\n//                                 <img class=\"d-block mx-auto\" src=\"https://live.staticflickr.com/65535/49968391076_1e2941b92d_o.png\" width=\"280px\" height=\"280px\" alt=\"Sticker\" />\n//                             </Carousel.Item>\n//                             <Carousel.Item>\n//                                 <img class=\"d-block mx-auto\" src=\"https://live.staticflickr.com/65535/49968658347_90e8b3770c_o.png\" width=\"280px\" height=\"280px\" alt=\"T-Shirt\" />\n//                             </Carousel.Item>\n//                             <Carousel.Item>\n//                                 <img class=\"d-block mx-auto\" src=\"https://live.staticflickr.com/65535/49968658267_051134fdbf_o.png\" width=\"280px\" height=\"280px\" alt=\"Sneaker\" />\n//                             </Carousel.Item>\n//                         </Carousel>\n//                     </div>\n//                 </Row>\n//             </div>\n//         )\n//     }\n// }\n\n// export default Progress;","import React from 'react';\nimport '../Styling/Refer.css';\nimport Card from \"react-bootstrap/Card\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Button from \"react-bootstrap/Button\";\n\nimport { EmailShareButton, FacebookShareButton, TwitterShareButton } from \"react-share\";\nimport { EmailIcon, FacebookIcon, TwitterIcon } from \"react-share\";\n\n\nconst imageLinks = [\"https://cdn2.hubspot.net/hubfs/521324/App-Icon-1200x1200-gmail.png\",\n    \"https://pngimg.com/uploads/facebook_logos/facebook_logos_PNG19748.png\",\n    \"https://live.staticflickr.com/65535/49967495518_10d097dfe5_o.png\"]\n\nclass Refer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeUser: null,\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.activeUser !== prevProps.activeUser) {\n            this.setState({ activeUser: this.props.activeUser })\n        }\n    }\n\n    componentDidMount() {\n        this.setState({ activeUser: this.props.activeUser })\n        console.log(this.props.activeUser)\n    }\n\n    copyTextToClipboard = () => {\n        let copyText = document.getElementById(\"link\")\n        copyText.select();\n        copyText.setSelectionRange(0, 99999); /*For mobile devices*/\n\n        /* Copy the text inside the text field */\n        document.execCommand(\"copy\");\n        /* Alert the copied text */\n        alert(\"Copied the text: \" + copyText.value);\n    }\n\n    render() {\n        return (\n            <div className=\"ref\">\n                <Row>\n                    <Col>\n                        <Card style={{ margin: \"0 auto\", width: \"45vw\", height: \"18vh\", marginTop: \"2vh\", marginBottom: \"2vh\", float: \"none\", marginLeft: \"10vw\" }}>\n                            <Card.Header>\n                                Your Referral Link:\n                                <div style={{ float: 'right' }}>\n                                    <Button variant=\"outline-secondary\" size=\"sm\" onClick={() => this.copyTextToClipboard()}>Copy to Clipboard</Button>\n                                </div>\n                            </Card.Header>\n                            <Card.Body class=\"h5 text-center\" style={{ margin: \"0 auto\", marginTop: \"3vh\", marginLeft: \"3vh\", marginRight: \"3vh\", float: \"none\" }}>\n                                {/* {`alex-shen1.github.io${process.env.PUBLIC_URL}/#/ref/${this.props.activeUser}`} */}\n                                <textarea id=\"link\" value={`alex-shen1.github.io${process.env.PUBLIC_URL}/#/ref/${this.props.activeUser}`} />\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col>\n                        <Card style={{ margin: \"0 auto\", width: \"20vw\", height: \"18vh\", marginTop: \"2vh\", marginBottom: \"2vh\", float: \"none\" }}>\n                            <Card.Header>\n                                Refer a friend!\n                            </Card.Header>\n                            <Card.Body style={{ justifyContent: 'space-between' }}>\n                                {imageLinks.map(link => {\n                                    return <Button variant=\"light\">\n                                        <img src={link} width=\"20px\" height=\"20px\" />\n                                    </Button>\n                                })}\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row >\n            </div >\n        )\n    }\n}\n\nexport default Refer;","// import NavPanel from \"./NavPanel\";\nimport Progress from \"./Progress\";\nimport Refer from \"./Refer\";\nimport NavPanel from './NavPanel';\n\nimport React, { Component } from \"react\";\n\nimport { Redirect } from \"react-router-dom\"\n\nexport default function HomePage(props) {\n    return (\n        props.isLoggedIn ?\n            <div className=\"homepage\">\n                <NavPanel activeUser={props.activeUser} setActiveUser={props.setActiveUser} />\n                <Refer activeUser={props.activeUser} />\n                <Progress activeUser={props.activeUser} />\n            </div> : <Redirect to='/login' />\n    )\n}\n","import React from 'react';\nimport '../Styling/Login.css';\nimport Button from \"react-bootstrap/Button\";\nimport Card from \"react-bootstrap/Card\";\nimport NavBar from \"react-bootstrap/NavBar\";\nimport firebase from '../firebase.js';\n\nimport { Redirect } from \"react-router-dom\"\n\nimport { auth, googleProvider, database } from \"../firebase\"\n\nexport default class Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n    }\n\n    setActiveUser = (user) => {\n        this.setState({ activeUser: user })\n    }\n\n    handleGoogleLogin = () => {\n        auth.signInWithPopup(googleProvider).then(result => {\n            console.log(result)\n            let user = result.user;\n            this.props.setActiveUser(user.uid)\n\n            // check if logged user is already in list of all users; if not, initialize new account data\n            database.ref(\"userData\").once(\"value\", snapshot => {\n                if (snapshot && snapshot.exists()) {\n                    let userAlreadyExists = false;\n                    Object.keys(snapshot.val()).map(id => {\n                        if (user.uid === id) {\n                            userAlreadyExists = true;\n                        }\n                    })\n\n                    if (!userAlreadyExists) {\n                        let new_user_data = {\n                            \"name\": user.displayName,\n                            \"referrals\": 0\n                        }\n                        database.ref(`userData/${user.uid}`).set(new_user_data)\n\n                        if (this.props.referrer != null) {\n                            this.creditReferrer()\n                        }\n                    }\n                }\n            })\n        }).catch(error => console.log(error));\n    }\n\n    // accesses referrer's referrals and increments by 1\n    creditReferrer = () => {\n        const id = this.props.referrer;\n\n        const ref = database.ref(`userData/${id}`)\n        ref.once(\"value\", snapshot => {\n            if (snapshot && snapshot.exists()) {\n                console.log(snapshot.val())\n                let referrer = snapshot.val()\n                referrer[\"referrals\"]++;\n                console.log(referrer)\n                ref.set(referrer)\n            }\n        }).catch(error => console.log(error));\n    }\n\n    // accesses referrer's referrals and increments by 1\n    creditReferrer = () => {\n        const id = this.props.referrer;\n\n        const ref = database.ref(`userData/${id}`)\n        ref.once(\"value\", snapshot => {\n            if (snapshot && snapshot.exists()) {\n                console.log(snapshot.val())\n                let referrer = snapshot.val()\n                referrer[\"referrals\"]++;\n                console.log(referrer)\n                ref.set(referrer)\n            }\n        })\n    }\n\n    handleLogout = () => {\n        console.log(\"logging out\")\n        this.setState({ isLoggedIn: false, activeUser: null })\n        this.props.setActiveUser(null)\n        auth.signOut()\n    }\n\n    render() {\n        return (\n\n            <div className=\"login\">\n                {!this.props.isLoggedIn ? <div>\n\n                    <NavBar>\n                        <NavBar.Brand>\n                            <img src=\"https://live.staticflickr.com/65535/49968029767_6d56a52575_o.png\" width=\"70px\" height=\"70px\" alt=\"logo\" />\n                        </NavBar.Brand>\n                        <NavBar.Brand>REFERee</NavBar.Brand>\n                    </NavBar>\n                    <div style={{ textAlign: \"center\" }}>\n                        <img src=\"https://live.staticflickr.com/65535/49968206482_048c35a16a_o.png\" width=\"1000px\" height=\"518px\" alt=\"shoes\" />\n                    </div>\n                    {\n                        this.props.isLoggedIn\n                            ? <Card bg=\"secondary\" text=\"light\" style={{ margin: \"0 auto\", width: \"10vw\", height: \"5vh\", marginTop: \"3vh\", marginBottom: \"3vh\", float: \"none\" }}>Hello, \"NAME\"</Card>\n                            : (<Card style={{ margin: \"0 auto\", width: \"70vw\", height: \"15vh\", marginTop: \"3vh\", marginBottom: \"3vh\", float: \"none\" }}>\n                                <Card.Body class=\"h4 text-center\" style={{ marginTop: \"2vh\" }}>\n                                    stay in the loop:\n                                </Card.Body>\n                                <Button variant=\"outline-dark\" style={{ margin: \"0 auto\", marginTop: \"1vh\", marginBottom: \"1vh\", float: \"none\" }} onClick={this.handleGoogleLogin}>Sign in with Google</Button>\n                            </Card>)\n                    }\n                    {\n                        this.props.isLoggedIn\n\n                            ? <Button variant=\"outline-info\" onClick={this.handleLogout} >Sign out</Button>\n                            : \"\"\n                    }\n                </div> : <Redirect to='/home' />}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\n\nimport { database } from \"../firebase\"\nimport Login from \"./Login\"\n\nexport default class ReferralLanding extends Component {\n\n    render() {\n        return <div>\n            {this.props.id}\n            <Login\n                isLoggedIn={this.props.isLoggedIn}\n                referrer={this.props.id}\n                setActiveUser={this.props.setActiveUser} />\n        </div>\n    }\n}","export const sampleData = {\n    \"EsmTKQcSgtVIreazD9ZY4nNEYK42\": {\n        name: \"Alex Shen\",\n        referrals: 2\n    },\n    \"kcEgNwSW3ZN10k8BwXJG0fPxylr2\": {\n        name: \"Alan Li\",\n        referrals: 3\n    }\n}\n","import React from 'react';\n\nimport AboutPage from './Components/AboutPage.js';\nimport HomePage from \"./Components/HomePage\"\nimport Login from \"./Components/Login\"\nimport ReferralLanding from \"./Components/ReferralLanding\"\nimport { HashRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\n\nimport { sampleData } from \"./data\"\nimport { auth, database } from \"./firebase\"\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeUser: null, // UID of current user\n      isLoggedIn: false,\n      allUsers: null,\n    }\n  }\n\n  componentDidMount() {\n    // run in case user is logged in, but page refreshed\n    auth.onAuthStateChanged(user => {\n      if (user) {\n        console.log(user)\n        // this.setState({ activeUser: user.uid, isLoggedIn: true })\n        this.setActiveUser(user.uid)\n      } else {\n        console.log(\"no user\")\n      }\n    });\n\n    database.ref(\"userData\").on(\"value\", snapshot => {\n      if (snapshot && snapshot.exists()) {\n        this.setState({ allUsers: Object.keys(snapshot.val()) })\n      }\n    })\n  }\n\n  // debugging function; remove later\n  resetFirebase = () => {\n    Object.keys(sampleData).map(id => {\n      database.ref(`userData/${id}`).set(sampleData[id])\n    })\n  }\n\n  // debugging function; remove later\n  printUser = () => {\n    auth.onAuthStateChanged(function (user) {\n      if (user) {\n        console.log(user)\n      } else {\n        console.log(\"no user\")\n      }\n    });\n  }\n\n  setActiveUser = userID => this.setState({ activeUser: userID, isLoggedIn: (userID != null) })\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Router>\n          <Switch>\n            {/* default path, redirects to login */}\n            <Route exact path=\"/\" render={props => {\n              return <Redirect to='/login' />\n            }} />\n\n            <Route exact path=\"/home\" render={(props) =>\n              <HomePage {...props}\n                activeUser={this.state.activeUser}\n                isLoggedIn={this.state.isLoggedIn}\n                setActiveUser={this.setActiveUser}\n              />} />\n\n            <Route exact path=\"/about\" render={(props) =>\n              <AboutPage {...props}\n                isLoggedIn={this.state.isLoggedIn} />} />\n\n            <Route exact path=\"/login\" render={(props) =>\n              <Login {...props}\n                loadUserData={this.loadUserData}\n                handleGoogleLogin={this.handleGoogleLogin}\n                isLoggedIn={this.state.isLoggedIn}\n                handleLogout={this.handleLogout}\n                referrer={null} />} />\n\n            {/* generates landing pages for referral links */}\n            {this.state.allUsers ? this.state.allUsers.map(id => {\n              console.log(`creating page for ${id}`)\n              return <Route exact path={`/ref/${id}`} render={(props) =>\n                <ReferralLanding {...props}\n                  isLoggedIn={this.state.isLoggedIn}\n                  id={id}\n                  setActiveUser={this.setActiveUser} />} />\n            }) : \"\"}\n          </Switch>\n        </Router>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}