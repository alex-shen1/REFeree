{"version":3,"sources":["Components/NavPanel.js","Components/Progress.js","Components/AboutPage.js","firebase.js","Components/Refer.js","Components/HomePage.js","Components/Login.js","Components/ReferralLanding.js","data.js","App.js","serviceWorker.js","index.js"],"names":["NavPanel","props","state","className","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","to","React","Component","prizes","Progress","referralCount","nextPrizeAt","Row","Col","Card","Title","Body","style","marginLeft","ProgressBar","striped","now","this","label","Math","floor","questions","q","a","AboutPage","faqs","map","quest","paddingBottom","variant","Text","width","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","googleProvider","auth","GoogleAuthProvider","database","Refer","margin","height","marginTop","marginBottom","float","Header","activeUser","class","Button","src","HomePage","Login","setActiveUser","user","setState","handleGoogleLogin","signInWithPopup","then","result","console","log","uid","ref","once","snapshot","exists","userAlreadyExists","Object","keys","val","new_user_data","displayName","set","referrer","creditReferrer","catch","error","handleLogout","isLoggedIn","signOut","text","onClick","ReferralLanding","sampleData","name","referrals","App","userID","resetFirebase","test","allUsers","onAuthStateChanged","on","basename","exact","path","render","component","loadUserData","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.0543854c.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../Styling/Navbar.css';\r\n\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from \"react-bootstrap/Nav\"\r\nimport NavDropdown from \"react-bootstrap/NavDropdown\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\n\r\nclass NavPanel extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"navpanel\">\r\n                <Navbar bg=\"light\" expand=\"lg\">\r\n                    <Navbar.Brand href=\"#home\">REFeree</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <div>\r\n                            <Link to='/home'> Home </Link>\r\n                            <Link to='/about'>About Us</Link>\r\n                        </div>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavPanel;","import React from 'react';\r\nimport '../Styling/Progress.css';\r\nimport Card from \"react-bootstrap/Card\";\r\nimport ProgressBar from \"react-bootstrap/ProgressBar\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nconst prizes = [\r\n    '10% Discount',\r\n    '20% Discount',\r\n    '30% Discount',\r\n    '50% Discount',\r\n]\r\n\r\nclass Progress extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            referralCount: 4,\r\n            nextPrizeAt: 5\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"progressbar\">\r\n                <Row>\r\n                    <Col>\r\n                        <Card className='Card'>\r\n                            <Card.Title className='Title'>Your Progress</Card.Title>\r\n                            <Card.Body>\r\n                                <div className='Milestones'>\r\n                                    <div>0</div>\r\n                                    <div style={{ marginLeft: '9vw' }}>5</div>\r\n                                    <div style={{ marginLeft: '9vw' }}>10</div>\r\n                                    <div style={{ marginLeft: '9vw' }}>15</div>\r\n                                    <div style={{ marginLeft: '9vw' }}>20</div>\r\n                                </div>\r\n                                <ProgressBar\r\n                                    striped now={100 * (this.state.referralCount / 20)}\r\n                                    className='ProgressBar'\r\n                                    label={this.state.referralCount}\r\n                                />\r\n                                <div className='Milestones'>\r\n                                    <div>Rewards</div>\r\n                                    <div className='Rewards'>{prizes[0]}</div>\r\n                                    <div className='Rewards'>{prizes[1]}</div>\r\n                                    <div className='Rewards'>{prizes[2]}</div>\r\n                                    <div className='Rewards'>{prizes[3]}</div>\r\n                                </div>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col>\r\n                        <Card className='Message'>\r\n                            <Card.Body>You are {5 - this.state.referralCount % 5} referrals away from the next prize!!</Card.Body>\r\n                            <Card.Body>Next Prize: {prizes[Math.floor(this.state.referralCount / 5)]}</Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Progress;","import React from \"react\";\r\nimport \"../Styling/FAQ.css\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport NavPanel from './NavPanel';\r\n\r\nconst questions = [\r\n    {\r\n        q: 'How can I refer my friends?',\r\n        a: 'Click on the refer button to invite your friends using email!'\r\n    },\r\n    {\r\n        q: 'What can I redeem with my points?',\r\n        a: 'We offer discounts and for the extremely dedicated, even a brand new Mercedes!'\r\n    }\r\n]\r\n\r\nexport default class AboutPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const faqs = questions.map(quest => {\r\n            return (\r\n                <div style={{ paddingBottom: 20 }}>\r\n                    <Card.Title variant=\"primary\">{quest.q}</Card.Title>\r\n                    <Card.Text variant='secondary'>{quest.a}</Card.Text>\r\n                </div>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div className=\"faq\">\r\n                <NavPanel />\r\n                <h1>FAQs</h1>\r\n                <Card style={{ width: '18rem' }}>\r\n                    <Card.Body>\r\n                        {faqs}\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}","// this code is copypasted from another thing i did\r\nimport firebase from \"firebase/app\";\r\n//these imports are what enable the function calls auth() and database()\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\"\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\r\n  authDomain: \"referee-42ffa.firebaseapp.com\",\r\n  databaseURL: \"https://referee-42ffa.firebaseio.com\",\r\n  projectId: \"referee-42ffa\",\r\n  storageBucket: \"referee-42ffa.appspot.com\",\r\n  messagingSenderId: \"527189579972\",\r\n  appId: \"1:527189579972:web:74e964b67554da94d15191\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport const auth = firebase.auth();\r\nexport const database = firebase.database();\r\nexport default firebase;","import React from 'react';\r\nimport '../Styling/Refer.css';\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { database } from \"../firebase\";\r\n\r\n\r\nclass Refer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ref\">\r\n                <Row>\r\n                    <Col>\r\n                        <Card style={{ margin: \"0 auto\", width: \"45vw\", height: \"25vh\", marginTop: \"3vh\", marginBottom: \"3vh\", float: \"none\", marginLeft: \"10vw\" }}>\r\n                            <Card.Header>\r\n                                Your Referral Link: {`${process.env.PUBLIC_URL}/${this.props.activeUser}`}\r\n                            </Card.Header>\r\n                            <Card.Body class=\"h1 text-center\">\r\n                                UID LINK\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col>\r\n                        <Card style={{ margin: \"0 auto\", width: \"16vw\", height: \"25vh\", marginTop: \"3vh\", marginBottom: \"3vh\", float: \"none\" }}>\r\n                            <Card.Header>\r\n                                Refer a friend!\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Button variant=\"light\">\r\n                                    <img src=\"https://cdn2.hubspot.net/hubfs/521324/App-Icon-1200x1200-gmail.png\" width=\"40px\" height=\"40px\" />\r\n                                </Button> {' '}\r\n                                <Button variant=\"light\">\r\n                                    <img src=\"https://pngimg.com/uploads/facebook_logos/facebook_logos_PNG19748.png\" width=\"40px\" height=\"40px\" />\r\n                                </Button> {' '}\r\n                                <Button variant=\"light\">\r\n                                    <img src=\"https://lh3.googleusercontent.com/proxy/L1Qczy6X8MHlu0EOMm6NPr88KdGmpGS6ocRV0l3lqsn96R0Wz2ec6nEViQKXW-MY_KBSBxLlrooEkwEk4_EzrIA_l0oKvAxQmPplyQR11AAFzrGsCoEFqxCDQbC_sBSjZA\" width=\"40px\" height=\"40px\" />\r\n                                </Button> {' '}\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Refer;","// import NavPanel from \"./NavPanel\";\r\nimport Progress from \"./Progress\";\r\nimport Refer from \"./Refer\";\r\nimport NavPanel from './NavPanel';\r\n\r\nimport React, { Component } from \"react\";\r\n\r\nexport default class HomePage extends Component {\r\n\r\n    render() {\r\n        return <div className=\"homepage\">\r\n            <NavPanel />\r\n            <Refer activeUser={this.props.activeUser}/>\r\n            <Progress />\r\n        </div>\r\n    }\r\n}","import React from 'react';\r\nimport '../Styling/Login.css';\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport firebase from '../firebase.js';\r\n\r\n\r\nimport { auth, googleProvider, database } from \"../firebase\"\r\n\r\nexport default class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    setActiveUser = (user) => {\r\n        this.setState({ activeUser: user })\r\n    }\r\n\r\n    handleGoogleLogin = () => {\r\n        auth.signInWithPopup(googleProvider).then(result => {\r\n            console.log(result)\r\n            let user = result.user;\r\n            this.props.setActiveUser(user.uid)\r\n\r\n\r\n            // check if logged user is already in list of all users; if not, initialize their data\r\n            database.ref(\"userData\").once(\"value\", snapshot => {\r\n                if (snapshot && snapshot.exists()) {\r\n                    let userAlreadyExists = false;\r\n                    Object.keys(snapshot.val()).map(id => {\r\n                        if (user.uid === id) {\r\n                            userAlreadyExists = true;\r\n                        }\r\n                    })\r\n\r\n                    if(!userAlreadyExists){\r\n                        let new_user_data = {\r\n                            \"name\": user.displayName,\r\n                            \"referrals\": 0\r\n                        }\r\n                        database.ref(`userData/${user.uid}`).set(new_user_data)\r\n                    }\r\n                    // should be moved into the above if later; outside so i don't need to\r\n                    // recreate account every time for testing\r\n                    if (this.props.referrer != null) {\r\n                        this.creditReferrer()\r\n                    }\r\n                }\r\n            })\r\n\r\n\r\n\r\n        }).catch(error => console.log(error));\r\n    }\r\n\r\n    // accesses referrer's referrals and increments by 1\r\n    creditReferrer = () => {\r\n        const id = this.props.referrer;\r\n\r\n        const ref = database.ref(`userData/${id}`)\r\n        ref.once(\"value\", snapshot => {\r\n            if (snapshot && snapshot.exists()) {\r\n                console.log(snapshot.val())\r\n                let referrer = snapshot.val()\r\n                referrer[\"referrals\"]++;\r\n                console.log(referrer)\r\n                ref.set(referrer)\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    handleLogout = () => {\r\n        console.log(\"logging out\")\r\n        this.setState({ isLoggedIn: false, activeUser: null })\r\n        auth.signOut()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"App\">\r\n                <header className=\"App-header\">\r\n                    {\r\n                        this.state.isLoggedIn\r\n                            ? <Card bg=\"secondary\" text=\"light\" style={{ margin: \"0 auto\", width: \"10vw\", height: \"5vh\", marginTop: \"3vh\", marginBottom: \"3vh\", float: \"none\" }}>Hello, \"NAME\"</Card>\r\n                            : <Card bg=\"secondary\" text=\"light\" style={{ margin: \"0 auto\", width: \"10vw\", height: \"5vh\", marginTop: \"3vh\", marginBottom: \"3vh\", float: \"none\" }}>Please sign in.</Card>\r\n                    }\r\n                    {/* {\r\n                        this.state.isLoggedIn\r\n                            ? <button onClick={this.handleLogout} >Sign out</button>\r\n                            : <button onClick={this.handleGoogleLogin}>Sign in with Google</button>\r\n                    } */}\r\n                    <button onClick={this.handleLogout} >Sign out</button>\r\n                    <button onClick={this.handleGoogleLogin}>Sign in with Google</button>\r\n                    <button onClick={this.creditReferrer}>test</button>\r\n                            {/* ? <Button variant=\"outline-info\" onClick={this.handleLogout} >Sign out</Button>\r\n                            : <Button variant=\"outline-info\" onClick={this.handleGoogleLogin}>Sign in with Google</Button>\r\n                    } */}\r\n                </header>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport { database } from \"../firebase\"\r\nimport Login from \"./Login\"\r\n\r\nexport default class ReferralLanding extends Component {\r\n\r\n    render() {\r\n        return <div>\r\n            {this.props.id}\r\n            <Login referrer={this.props.id} setActiveUser={this.props.setActiveUser}/>\r\n        </div>\r\n    }\r\n}","export const sampleData = {\r\n    \"EsmTKQcSgtVIreazD9ZY4nNEYK42\": {\r\n        name: \"Alex Shen\",\r\n        referrals: 2\r\n    },\r\n    \"kcEgNwSW3ZN10k8BwXJG0fPxylr2\": {\r\n        name: \"Alan Li\",\r\n        referrals: 3\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport NavPanel from './Components/NavPanel.js';\r\nimport Progress from './Components/Progress.js';\r\nimport AboutPage from './Components/AboutPage.js';\r\nimport HomePage from \"./Components/HomePage\"\r\nimport Login from \"./Components/Login\"\r\nimport ReferralLanding from \"./Components/ReferralLanding\"\r\nimport Refer from './Components/Refer.js';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\nimport { sampleData } from \"./data\"\r\n\r\nimport firebase, { database } from \"./firebase\"\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeUser: null, // UID of current user\r\n      isLoggedIn: false,\r\n      allUsers: null\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    // run in case user is logged in, but page refreshed\r\n    // kinda duplicate of in login, might change later\r\n    firebase.auth().onAuthStateChanged(user => {\r\n      if (user) {\r\n        // console.log(user)\r\n        this.setActiveUser(user.uid)\r\n      } else {\r\n        console.log(\"no user\")\r\n      }\r\n    });\r\n\r\n    database.ref(\"userData\").on(\"value\", snapshot => {\r\n      if (snapshot && snapshot.exists()) {\r\n        this.setState({ allUsers: Object.keys(snapshot.val()) })\r\n      }\r\n    })\r\n  }\r\n\r\n  setActiveUser = userID => this.setState({ activeUser: userID, isLoggedIn: userID != null })\r\n\r\n  resetFirebase = () => {\r\n    Object.keys(sampleData).map(id => {\r\n      database.ref(`userData/${id}`).set(sampleData[id])\r\n    })\r\n  }\r\n\r\n  test = () => {\r\n    console.log(this.state.activeUser)\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"app\">\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n          <Switch>\r\n            <Route exact path=\"/\" render={props => {\r\n              return <Redirect to='/home' />\r\n              // console.log(this)\r\n              // console.log(this.state)\r\n              // console.log(this.state.isLoggedIn)\r\n              // console.log(props);\r\n              // return this.state.isLoggedIn ?\r\n              //   <Redirect to='/home' /> :\r\n              //   <Redirect to='/login' />\r\n            }} />\r\n            <Route exact path=\"/home\" render={(props) =>\r\n              <HomePage {...props}\r\n                activeUser={this.state.activeUser} />} />\r\n            <Route exact path=\"/about\" component={AboutPage} />\r\n            <Route exact path=\"/login\" render={(props) =>\r\n              <Login {...props}\r\n                setActiveUser={this.setActiveUser}\r\n                isLoggedIn={this.state.isLoggedIn}\r\n                referrer={null} />} />\r\n            {this.state.allUsers != null ? this.state.allUsers.map(id => {\r\n              return <Route exact path={`/ref/${id}`} render={(props) =>\r\n                <ReferralLanding {...props}\r\n                  id={id}\r\n                  setActiveUser={this.setActiveUser} />} />\r\n            }) : \"\"}\r\n          </Switch>\r\n        </Router> */}\r\n\r\n\r\n        {/* <button onClick={this.handleGoogleLogin}>Log in w/ google</button> */}\r\n        <button onClick={this.loadUserData}>Print user</button>\r\n        {/* <button onClick={()=>auth.signOut()}>Sign out</button> */}\r\n        {/* <button onClick={this.test}>TEST</button> */}\r\n        <button onClick={this.resetFirebase}>reset firebase</button>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}